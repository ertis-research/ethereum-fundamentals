const Web3 = require('web3'); // Import web3 library
const HDWalletProvider = require("@truffle/hdwallet-provider"); // Import hdwallet-provider library

// Create the provider
const provider = new HDWalletProvider({
  privateKeys: ['0xa5700c49435e0616cbb005154723a36cb8559de40c11e184f2cf8ec4492b9370'],
  providerOrUrl: "https://ropsten.infura.io/v3/523d119bfcd847b6a7e08b6f926c04cc"
});
const web3 = new Web3(provider); // Create a Web3 instance using the provider
web3.eth.getAccounts().then(response => {
  const accounts = response;
  console.log(accounts);
  const basketgameContract = new web3.eth.Contract([ { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [ { "indexed": false, "internalType": "uint256", "name": "game_id", "type": "uint256" }, { "indexed": false, "internalType": "string", "name": "message", "type": "string" }, { "indexed": false, "internalType": "uint256", "name": "home", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "visitor", "type": "uint256" } ], "name": "FinalResult", "type": "event" }, { "inputs": [ { "internalType": "string", "name": "homeTeam", "type": "string" }, { "internalType": "string", "name": "visitorTeam", "type": "string" } ], "name": "createGame", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "game_id", "type": "uint256" } ], "name": "finishGame", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "game_id", "type": "uint256" } ], "name": "getResult", "outputs": [ { "internalType": "string", "name": "", "type": "string" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "string", "name": "", "type": "string" }, { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "game_id", "type": "uint256" } ], "name": "isGameFinished", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "game_id", "type": "uint256" }, { "internalType": "enum BasketGame.Team", "name": "team", "type": "uint8" } ], "name": "scoreFieldGoal", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "game_id", "type": "uint256" }, { "internalType": "enum BasketGame.Team", "name": "team", "type": "uint8" } ], "name": "scoreFreeThrow", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "game_id", "type": "uint256" }, { "internalType": "enum BasketGame.Team", "name": "team", "type": "uint8" } ], "name": "scoreThreePointer", "outputs": [], "stateMutability": "nonpayable", "type": "function" } ]); // Create contract instance
  basketgameContract.deploy({ // Deploy contract
    data: '0x608060405234801561001057600080fd5b5060018081905550610ebc806100276000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b00fad971161005b578063b00fad9714610222578063cfe186b21461025d578063df472d671461028b578063fbb7acde146103f15761007d565b8063349079dc146100825780638cfb19f0146100bd578063995e433914610101575b600080fd5b6100bb6004803603604081101561009857600080fd5b8101908080359060200190929190803560ff16906020019092919050505061042c565b005b6100e9600480360360208110156100d357600080fd5b8101908080359060200190929190505050610518565b60405180821515815260200191505060405180910390f35b61012d6004803603602081101561011757600080fd5b8101908080359060200190929190505050610544565b604051808060200185815260200180602001848152602001838103835287818151815260200191508051906020019080838360005b8381101561017d578082015181840152602081019050610162565b50505050905090810190601f1680156101aa5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156101e35780820151818401526020810190506101c8565b50505050905090810190601f1680156102105780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b61025b6004803603604081101561023857600080fd5b8101908080359060200190929190803560ff1690602001909291905050506106e9565b005b6102896004803603602081101561027357600080fd5b81019080803590602001909291905050506107d7565b005b6103db600480360360408110156102a157600080fd5b81019080803590602001906401000000008111156102be57600080fd5b8201836020820111156102d057600080fd5b803590602001918460018302840111640100000000831117156102f257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561035557600080fd5b82018360208201111561036757600080fd5b8035906020019184600183028401116401000000008311171561038957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b1b565b6040518082815260200191505060405180910390f35b61042a6004803603604081101561040757600080fd5b8101908080359060200190929190803560ff169060200190929190505050610bfe565b005b8160008082815260200190815260200160002060040160009054906101000a900460ff16156104a6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610e666021913960400191505060405180910390fd5b600060018111156104b357fe5b8260018111156104bf57fe5b14156104ee57600260008085815260200190815260200160002060010160008282540192505081905550610513565b6002600080858152602001908152602001600020600301600082825401925050819055505b505050565b600080600083815260200190815260200160002060040160009054906101000a900460ff169050919050565b60606000606060008060008681526020019081526020016000206000016000808781526020019081526020016000206001015460008088815260200190815260200160002060020160008089815260200190815260200160002060030154838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106375780601f1061060c57610100808354040283529160200191610637565b820191906000526020600020905b81548152906001019060200180831161061a57829003601f168201915b50505050509350818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d35780601f106106a8576101008083540402835291602001916106d3565b820191906000526020600020905b8154815290600101906020018083116106b657829003601f168201915b5050505050915093509350935093509193509193565b8160008082815260200190815260200160002060040160009054906101000a900460ff1615610763576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610e666021913960400191505060405180910390fd5b6000600181111561077057fe5b82600181111561077c57fe5b14156107ac57600080848152602001908152602001600020600101600081548092919060010191905055506107d2565b600080848152602001908152602001600020600301600081548092919060010191905055505b505050565b8060008082815260200190815260200160002060040160009054906101000a900460ff1615610851576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610e666021913960400191505060405180910390fd5b600160008084815260200190815260200160002060040160006101000a81548160ff021916908315150217905550600080838152602001908152602001600020600301546000808481526020019081526020016000206001015411156109e6577f4ec64e81a141712c00819250e1d3cf4da73cdc251d9a4f2e38d0aef03544b300826109266000808681526020019081526020016000206000016040518060400160405280600881526020017f2068617320776f6e000000000000000000000000000000000000000000000000815250610cea565b60008086815260200190815260200160002060010154600080878152602001908152602001600020600301546040518085815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156109a4578082015181840152602081019050610989565b50505050905090810190601f1680156109d15780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1610b17565b7f4ec64e81a141712c00819250e1d3cf4da73cdc251d9a4f2e38d0aef03544b30082610a5b6000808681526020019081526020016000206002016040518060400160405280600881526020017f2068617320776f6e000000000000000000000000000000000000000000000000815250610cea565b60008086815260200190815260200160002060010154600080878152602001908152602001600020600301546040518085815260200180602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015610ad9578082015181840152602081019050610abe565b50505050905090810190601f168015610b065780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15b5050565b60008260008060015481526020019081526020016000206000019080519060200190610b48929190610dba565b5060008060006001548152602001908152602001600020600101819055508160008060015481526020019081526020016000206002019080519060200190610b91929190610dba565b5060008060006001548152602001908152602001600020600301819055506000806000600154815260200190815260200160002060040160006101000a81548160ff0219169083151502179055506001600081548092919060010191905055506001805403905092915050565b8160008082815260200190815260200160002060040160009054906101000a900460ff1615610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610e666021913960400191505060405180910390fd5b60006001811115610c8557fe5b826001811115610c9157fe5b1415610cc057600360008085815260200190815260200160002060010160008282540192505081905550610ce5565b6003600080858152602001908152602001600020600301600082825401925050819055505b505050565b606082826040516020018083805460018160011615610100020316600290048015610d4c5780601f10610d2a576101008083540402835291820191610d4c565b820191906000526020600020905b815481529060010190602001808311610d38575b505082805190602001908083835b60208310610d7d5780518252602082019150602081019050602083039250610d5a565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610df05760008555610e37565b82601f10610e0957805160ff1916838001178555610e37565b82800160010185558215610e37579182015b82811115610e36578251825591602001919060010190610e1b565b5b509050610e449190610e48565b5090565b5b80821115610e61576000816000905550600101610e49565b509056fe47616d652069732066696e69736865642e204e6f206d6f726520706f696e747321a26469706673582212200f7044afec27c0eca033b66e485ceca3579880c0bb794ef47954bc563cd6338c64736f6c63430007040033', // Use Remix IDE bytecode
    arguments: []
  }).send({
    from: accounts[0], // In this case you can only use the imported account, which is the account '0'
    gas: '4700000'
  }).then(response => {
    console.log(`Contract mined! address: ${response._address}`);
  });
});
provider.engine.stop(); // At termination, 'provider.engine.stop()' should be called to finish the process elegantly.
